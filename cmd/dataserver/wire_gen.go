// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"awesomeProject1/internal/api"
	"awesomeProject1/internal/pkg/zapx"
	"awesomeProject1/internal/repository"
	"awesomeProject1/internal/service"
	"awesomeProject1/ioc"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitDateServer() *gin.Engine {
	zapLogger := ioc.InitZapLogger()
	loggerv1 := logger.NewZapLogger(zapLogger)
	storageRepository := repository.NewStorageRepository(loggerv1)
	objectService := service.NewObjectService(storageRepository)
	client := ioc.Initkafka()
	syncProducer := ioc.InitSyncProducer(client)
	consumer := ioc.InitSyncConsumer(client)
	locateRepository := repository.NewLocateRepository()
	nodeService := service.NewNodeService(loggerv1, syncProducer, consumer, locateRepository)
	dataServerHandler := api.NewObjectHandler(objectService, nodeService, loggerv1)
	engine := InitGinEngine(dataServerHandler)
	return engine
}

// wire.go:

func InitGinEngine(ObjectHandler *api.DataServerHandler) *gin.Engine {
	server := gin.Default()
	ObjectHandler.RegisterObjectRoute(server)
	return server
}
